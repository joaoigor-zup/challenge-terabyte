services:
  postgresql:
    image: "ankane/pgvector"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "6000:5432"
    volumes:
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql:ro"
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - terabyte_network

  fastapi:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgresql:5432/postgres
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-large}
      - MAX_HISTORY_MESSAGES=${MAX_HISTORY_MESSAGES:-10}
      - MAX_SIMILAR_MESSAGES=${MAX_SIMILAR_MESSAGES:-3}
      - SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.3}
      - API_TITLE=${API_TITLE:-Terabyte Challenge Chat API}
      - API_DESCRIPTION=${API_DESCRIPTION:-API de chat with LLM, vector search e function calling}
      - API_VERSION=${API_VERSION:-1.0.0}
      - PYTHONPATH=/app
    volumes:
      - ../:/app:ro
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - terabyte_network
    restart: unless-stopped
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data:

networks:
  terabyte_network:
    driver: bridge